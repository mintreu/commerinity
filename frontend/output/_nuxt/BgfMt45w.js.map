{"version":3,"file":"BgfMt45w.js","sources":["../../../../components/cart/AddToCartButton.vue"],"sourcesContent":["<template>\r\n  <button\r\n      :disabled=\"loading\"\r\n      @click=\"handleAddToCart\"\r\n      class=\"px-6 py-3 rounded transition-colors duration-200\"\r\n      :class=\"loading\r\n      ? 'bg-gray-400 text-gray-100 cursor-not-allowed'\r\n      : 'bg-blue-600 text-white hover:bg-blue-700'\r\n    \"\r\n  >\r\n    <span v-if=\"loading\">Adding...</span>\r\n    <span v-else>Add to Cart</span>\r\n  </button>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref } from 'vue'\r\nimport { useCart } from '~/composables/useCart'\r\n\r\nconst props = defineProps({\r\n  sku: { type: String, required: true },\r\n  quantity: { type: Number, default: 1 }\r\n})\r\n\r\nconst loading = ref(false)\r\nconst { addToCart } = useCart()\r\n\r\nasync function handleAddToCart() {\r\n  if (!props.sku) return\r\n  loading.value = true\r\n\r\n  try {\r\n    await addToCart(props.sku, props.quantity)\r\n\r\n    // âœ… cartData updates automatically via composable,\r\n    // so CartCounter & MyCart will react instantly\r\n  } catch (e) {\r\n    console.error('Add to cart failed:', e)\r\n    alert('Failed to add to cart')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n</script>\r\n"],"names":["props","__props","loading","ref","addToCart","useCart","handleAddToCart","e","_createElementBlock","_normalizeClass","_openBlock"],"mappings":"myBAmBA,MAAMA,EAAQC,EAKRC,EAAUC,EAAI,EAAK,EACnB,CAAE,UAAAC,CAAA,EAAcC,EAAA,EAEtB,eAAeC,GAAkB,CAC/B,GAAKN,EAAM,IACX,CAAAE,EAAQ,MAAQ,GAEhB,GAAI,CACF,MAAME,EAAUJ,EAAM,IAAKA,EAAM,QAAQ,CAI3C,OAASO,EAAG,CACV,QAAQ,MAAM,sBAAuBA,CAAC,EACtC,MAAM,uBAAuB,CAC/B,QAAA,CACEL,EAAQ,MAAQ,EAClB,EACF,mBAzCEM,EAWS,SAAA,CAVJ,SAAUN,EAAA,MACV,QAAOI,EACR,MAAKG,EAAA,CAAC,mDACEP,EAAA,oGAKEA,EAAA,OAAZQ,EAAA,EAAAF,EAAqC,SAAhB,WAAS,IAC9BE,EAAA,EAAAF,EAA+B,SAAlB,aAAW,EAAA"}