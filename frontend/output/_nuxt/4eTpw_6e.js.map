{"version":3,"file":"4eTpw_6e.js","sources":["../../../../pages/dashboard/account/address/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useSanctumFetch, useRuntimeConfig,useRoute  } from '#imports'\r\n\r\ndefinePageMeta({ layout: 'dashboard' })\r\n\r\nconst config = useRuntimeConfig()\r\nconst addresses = ref<any[]>([])\r\nconst isLoading = ref(false)\r\n\r\nconst showModal = ref(false)\r\nconst modalMode = ref<'create' | 'edit' | 'view'>('create')\r\nconst searchPincode = ref('')\r\n\r\nconst stateList = ref<any[]>([])\r\n/**\r\n * blockList will hold objects: { name: string, url: string }\r\n * The select bind will use the `url` (primitive string) as the value.\r\n */\r\nconst blockList = ref<Array<{ name: string; url: string }>>([])\r\nconst districtList = ref<string[]>([])\r\n\r\n// Default form state\r\nconst currentAddress = reactive<any>({\r\n  uuid: '',\r\n  title: '',\r\n  type: 'home',\r\n  person_name: '',\r\n  person_email: '',\r\n  person_mobile: '',\r\n  address_1: '',\r\n  landmark: '',\r\n  city: '',\r\n  state_code: '',\r\n  postal_code: '',\r\n  block_id: '', // will contain the block URL or fallback string\r\n  village: '',\r\n  country: 'IN', // Always default to India\r\n})\r\n\r\n// Validation errors\r\nconst errors = reactive<Record<string, string>>({})\r\nconst route = useRoute()\r\n\r\n// List of required fields (as requested)\r\nconst requiredFields = [\r\n  'title',\r\n  'type',\r\n  'address_1',\r\n  'landmark',\r\n  'person_name',\r\n  'person_mobile',\r\n  'state_code',\r\n  'city',\r\n  'postal_code',\r\n  'block_id',\r\n  'country',\r\n]\r\n\r\n// Helper: check validity without mutating `errors`\r\nfunction isFieldValidSilent(field: string): boolean {\r\n  const val = (currentAddress[field] ?? '').toString().trim()\r\n\r\n  switch (field) {\r\n    case 'title':\r\n      if (!raw) errors.title = 'Title is required.'\r\n      break\r\n    case 'type':\r\n    case 'address_1':\r\n    case 'landmark':\r\n    case 'person_name':\r\n    case 'state_code':\r\n    case 'city':\r\n    case 'block_id':\r\n    case 'country':\r\n      return val.length > 0\r\n\r\n    case 'person_mobile': {\r\n      const digits = (currentAddress.person_mobile || '').toString().replace(/\\D/g, '')\r\n      return digits.length >= 10 // accept 10+ digits\r\n    }\r\n\r\n    case 'postal_code':\r\n      return /^\\d{6}$/.test(currentAddress.postal_code || '')\r\n\r\n    default:\r\n      return true\r\n  }\r\n}\r\n\r\n// Validate single field (mutates `errors` with helpful messages)\r\nfunction validateField(field: string) {\r\n  const raw = (currentAddress[field] ?? '').toString().trim()\r\n\r\n  // Clear previous error first\r\n  delete errors[field]\r\n\r\n  switch (field) {\r\n    case 'type':\r\n      if (!raw) errors.type = 'Please select an address type.'\r\n      break\r\n\r\n    case 'address_1':\r\n      if (!raw) errors.address_1 = 'Street / house name is required.'\r\n      else if (raw.length < 3) errors.address_1 = 'Please enter a valid street address.'\r\n      break\r\n\r\n    case 'landmark':\r\n      if (!raw) errors.landmark = 'Landmark is required.'\r\n      break\r\n\r\n    case 'person_name':\r\n      if (!raw) errors.person_name = 'Contact name is required.'\r\n      break\r\n\r\n    case 'person_mobile': {\r\n      const digits = (currentAddress.person_mobile || '').toString().replace(/\\D/g, '')\r\n      if (!digits) errors.person_mobile = 'Mobile number is required.'\r\n      else if (digits.length < 10) errors.person_mobile = 'Enter a valid mobile number (min 10 digits).'\r\n      break\r\n    }\r\n\r\n    case 'state_code':\r\n      if (!raw) errors.state_code = 'State is required.'\r\n      break\r\n\r\n    case 'city':\r\n      if (!raw) errors.city = 'City / district is required.'\r\n      break\r\n\r\n    case 'postal_code':\r\n      if (!raw) errors.postal_code = 'Pincode is required.'\r\n      else if (!/^\\d{6}$/.test(currentAddress.postal_code || '')) errors.postal_code = 'Pincode must be 6 digits.'\r\n      break\r\n\r\n    case 'block_id':\r\n      if (!raw) errors.block_id = 'Block is required.'\r\n      break\r\n\r\n    case 'country':\r\n      if (!raw) errors.country = 'Country is required.'\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\n// Validate all required fields and return boolean (true = valid)\r\nfunction validateAll(): boolean {\r\n  // clear all previous errors\r\n  Object.keys(errors).forEach(k => delete errors[k])\r\n\r\n  requiredFields.forEach(f => validateField(f))\r\n\r\n  return Object.keys(errors).length === 0\r\n}\r\n\r\n// Small helpers\r\nfunction clearErrors() {\r\n  Object.keys(errors).forEach(k => delete errors[k])\r\n}\r\n\r\n// Badge colors mapping (kept as-is)\r\nconst typeBadges: Record<string, { label: string; color: string }> = {\r\n  home: { label: 'HOME', color: 'bg-green-100 text-green-700 dark:bg-green-800 dark:text-green-200' },\r\n  work: { label: 'WORK', color: 'bg-emerald-100 text-emerald-700 dark:bg-emerald-800 dark:text-emerald-200' },\r\n  delivery: { label: 'DELIVERY', color: 'bg-amber-100 text-amber-700 dark:bg-amber-800 dark:text-amber-200' },\r\n  other: { label: 'OTHER', color: 'bg-sky-100 text-sky-700 dark:bg-sky-800 dark:text-sky-200' },\r\n}\r\n\r\n// Load states\r\nasync function fetchStates() {\r\n  const res = await useSanctumFetch(`${config.public.apiBase}/geo/states/IN`)\r\n  // keep stateList as returned (array of objects)\r\n  // ensure each state's value is `code` for binding (we use state.code in template)\r\n  stateList.value = res.data\r\n}\r\n\r\n// Load blocks + districts based on state\r\nasync function fetchBlocks() {\r\n  if (!currentAddress.state_code) {\r\n    blockList.value = []\r\n    districtList.value = []\r\n    return\r\n  }\r\n  try {\r\n    const res = await useSanctumFetch(`${config.public.apiBase}/geo/state/${currentAddress.state_code}`)\r\n    const blocks = res.data.blocks || []\r\n\r\n    // Normalize block objects to { name, url }.\r\n    // Use common fallbacks if the API doesn't provide `url` exactly.\r\n    blockList.value = blocks.map((b: any) => {\r\n      const name = b.name || b.block_name || b.title || ''\r\n      // common fallback chain for unique identifier/url:\r\n      const url = b.url || b.href || (b._links && b._links.self && b._links.self.href) || b.slug || b.id || name\r\n      return { name, url: String(url) }\r\n    })\r\n\r\n    // district list (unique)\r\n    districtList.value = [...new Set(blocks.map((b: any) => b.district).filter(Boolean))]\r\n  } catch {\r\n    blockList.value = []\r\n    districtList.value = []\r\n  }\r\n}\r\n\r\n// Autofill from postal code\r\nasync function fetchAddressFromPostalCode() {\r\n  const code = currentAddress.postal_code\r\n  if (!code || code.length !== 6) return\r\n  try {\r\n    const res = await $fetch(`https://api.postalpincode.in/pincode/${code}`)\r\n    const data = res[0]\r\n    if (data.Status !== 'Success') return alert('Invalid postal code')\r\n\r\n    const po = data.PostOffice[0]\r\n    currentAddress.city = po.District\r\n    currentAddress.state_code = getStateCodeByName(po.State)\r\n    currentAddress.village = po.Name\r\n    currentAddress.block_id = ''\r\n\r\n    // load blocks for the state (so we can map block name -> url)\r\n    await fetchBlocks()\r\n\r\n    // postal response might return Block names — try to map to block url if available\r\n    const poBlockName = (po.Block || '').trim()\r\n    if (poBlockName && blockList.value && blockList.value.length) {\r\n      const found = blockList.value.find(b => b.name.toLowerCase() === poBlockName.toLowerCase())\r\n      if (found) currentAddress.block_id = found.url\r\n      else currentAddress.block_id = poBlockName // fallback to plain name\r\n    } else {\r\n      // If blockList empty, try to set name from postal data (fallback)\r\n      currentAddress.block_id = poBlockName || ''\r\n    }\r\n  } catch {\r\n    alert('Failed to fetch address info')\r\n  }\r\n}\r\n\r\nfunction getStateCodeByName(name: string): string {\r\n  const state = stateList.value.find((s) => s.name.toLowerCase() === name.toLowerCase())\r\n  return state?.code || ''\r\n}\r\n\r\n// Load addresses\r\nasync function loadAddresses() {\r\n  isLoading.value = true\r\n  try {\r\n    const res = await useSanctumFetch(`${config.public.apiBase}/account/addresses`)\r\n    addresses.value = res?.data || []\r\n  } finally {\r\n    isLoading.value = false\r\n  }\r\n}\r\n\r\n// Search filter\r\nconst filteredAddresses = computed(() => {\r\n  if (!searchPincode.value) return addresses.value\r\n  return addresses.value.filter(addr =>\r\n      addr.postal_code?.toString().includes(searchPincode.value.trim())\r\n  )\r\n})\r\n\r\n// Modal open\r\nfunction openModal(mode: 'create' | 'edit' | 'view', address: any | null = null) {\r\n  modalMode.value = mode\r\n  clearErrors()\r\n\r\n  if (address) {\r\n    Object.assign(currentAddress, {\r\n      ...address,\r\n      country: 'IN',\r\n      state_code: address.state?.code || address.state_code || '',\r\n      city: address.city || '',\r\n      block_id: address.block?.url || address.block_id || address.block || '',\r\n    })\r\n  } else {\r\n    Object.assign(currentAddress, {\r\n      // uuid: '',\r\n      title: '',\r\n      type: '',  // keep blank initially\r\n      person_name: '',\r\n      person_email: '',\r\n      person_mobile: '',\r\n      address_1: '',\r\n      landmark: '',\r\n      city: '',\r\n      state_code: '',\r\n      postal_code: '',\r\n      block_id: '',\r\n      village: '',\r\n      country: 'IN',\r\n    })\r\n\r\n    // ✅ Auto-fill from query string only in create mode\r\n    const queryType = (route.query.type || '').toString().toLowerCase()\r\n    if (queryType && typeBadges[queryType]) {\r\n      currentAddress.type = queryType\r\n    }\r\n  }\r\n\r\n  showModal.value = true\r\n}\r\n\r\n// Save\r\nasync function saveAddress() {\r\n  // Validate required fields\r\n  if (!validateAll()) {\r\n    // Keep inline errors — do not submit when invalid\r\n    return\r\n  }\r\n\r\n  // payload uses primitives only (state_code is code string, block_id is url or string)\r\n  const payload = { ...currentAddress }\r\n  if (modalMode.value === 'edit') {\r\n    await useSanctumFetch(`${config.public.apiBase}/account/addresses/${payload.uuid}`, {\r\n      method: 'PUT',\r\n      body: payload,\r\n    })\r\n  } else {\r\n    await useSanctumFetch(`${config.public.apiBase}/account/addresses`, {\r\n      method: 'POST',\r\n      body: payload,\r\n    })\r\n  }\r\n  showModal.value = false\r\n  await loadAddresses()\r\n}\r\n\r\n// Delete\r\nasync function deleteAddress(uuid: string) {\r\n  if (confirm('Are you sure you want to delete this address?')) {\r\n    await useSanctumFetch(`${config.public.apiBase}/account/addresses/${uuid}`, { method: 'DELETE' })\r\n    await loadAddresses()\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchStates()\r\n  loadAddresses()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"p-6 mt-8 space-y-6\">\r\n    <!-- Header -->\r\n    <div class=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n      <div class=\"flex items-start gap-4\">\r\n        <div class=\"rounded-lg p-3 bg-gradient-to-r from-white via-slate-50 to-white dark:from-gray-800 dark:via-gray-800 dark:to-gray-800 shadow-sm ring-1 ring-gray-100 dark:ring-0\">\r\n          <h1 class=\"text-2xl font-semibold text-gray-800 dark:text-gray-100 flex items-center gap-2\">\r\n            <span class=\"text-2xl\">📍</span>\r\n            <span>My Addresses</span>\r\n          </h1>\r\n          <p class=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">Manage your saved shipping & billing addresses.</p>\r\n        </div>\r\n\r\n        <div class=\"hidden md:flex flex-col justify-center\">\r\n          <div class=\"text-sm text-gray-500 dark:text-gray-400\">Total</div>\r\n          <div class=\"mt-1 inline-flex items-center gap-2\">\r\n            <span class=\"inline-flex items-center justify-center w-10 h-10 rounded-full bg-blue-600 text-white text-sm font-semibold shadow-md\">\r\n              {{ addresses.length }}\r\n            </span>\r\n            <span class=\"text-sm text-gray-700 dark:text-gray-300\">addresses</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"w-full md:w-auto flex items-center gap-3\">\r\n        <div class=\"relative w-full md:w-72\">\r\n          <span class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-gray-400\">\r\n            🔎\r\n          </span>\r\n          <input\r\n              v-model=\"searchPincode\"\r\n              type=\"text\"\r\n              placeholder=\"Search by pincode\"\r\n              class=\"w-full pl-10 pr-12 py-2 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 text-sm focus:ring-2 focus:ring-blue-200 dark:focus:ring-blue-800\"\r\n          />\r\n          <button v-if=\"searchPincode\" @click=\"searchPincode = ''\" class=\"absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\">\r\n            ✖\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n            @click=\"openModal('create')\"\r\n            class=\"inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-gradient-to-br from-blue-600 to-blue-500 shadow-lg text-white hover:from-blue-700 hover:to-blue-600\"\r\n        >\r\n          <Icon name=\"mdi:plus\" /> Add Address\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Content area -->\r\n    <div>\r\n      <div v-if=\"isLoading\" class=\"rounded-lg border border-dashed border-gray-200 dark:border-gray-700 p-8 text-center text-gray-500\">\r\n        Loading addresses...\r\n      </div>\r\n\r\n      <div v-else>\r\n        <div v-if=\"!addresses.length\" class=\"rounded-lg p-6 bg-white dark:bg-gray-800 ring-1 ring-gray-100 dark:ring-0 text-center\">\r\n          <p class=\"text-gray-600 dark:text-gray-300 mb-2\">No addresses yet</p>\r\n          <button @click=\"openModal('create')\" class=\"px-4 py-2 rounded-lg bg-blue-600 text-white shadow\">Create your first address</button>\r\n        </div>\r\n\r\n        <div v-else class=\"grid gap-4\">\r\n          <!-- Desktop: a polished table, Mobile: cards -->\r\n          <div class=\"hidden md:block\">\r\n            <div class=\"overflow-hidden rounded-lg shadow\">\r\n              <table class=\"min-w-full divide-y divide-gray-200 bg-white dark:bg-gray-800\">\r\n                <thead class=\"bg-gray-50 dark:bg-gray-900\">\r\n                <tr>\r\n                  <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Title</th>\r\n                  <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\r\n                  <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Address</th>\r\n                  <th class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody class=\"divide-y divide-gray-100\">\r\n                <tr v-for=\"address in filteredAddresses\" :key=\"address.uuid\" class=\"hover:bg-gray-50 dark:hover:bg-gray-900 transition\">\r\n                  <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div class=\"text-sm font-semibold text-gray-800 dark:text-gray-100\">{{ address.title }}</div>\r\n                    <div class=\"text-xs text-gray-500 mt-1\">{{ address.person_name }} • <span class=\"text-gray-400\">{{ address.person_mobile }}</span></div>\r\n                  </td>\r\n\r\n                  <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span :class=\"['inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold', typeBadges[address.type?.toLowerCase()]?.color]\">\r\n                        {{ typeBadges[address.type?.toLowerCase()]?.label || address.type }}\r\n                      </span>\r\n                  </td>\r\n\r\n                  <td class=\"px-6 py-4 whitespace-normal text-sm text-gray-700 dark:text-gray-300\">\r\n                    {{ address.address_1 }}, {{ address.city }}, {{ address.state?.name || address.state }}, {{ address.postal_code }}, India\r\n                  </td>\r\n\r\n                  <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium flex justify-end gap-2\">\r\n                    <button @click=\"openModal('view', address)\" title=\"View\" class=\"px-3 py-1 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-200\">\r\n                      <Icon name=\"mdi:eye\" /> View\r\n                    </button>\r\n                    <button @click=\"openModal('edit', address)\" title=\"Edit\" class=\"px-3 py-1 rounded-lg bg-blue-600 hover:bg-blue-700 text-white shadow\">\r\n                      <Icon name=\"mdi:pencil\" /> Edit\r\n                    </button>\r\n                    <button @click=\"deleteAddress(address.uuid)\" title=\"Delete\" class=\"px-3 py-1 rounded-lg bg-red-600 hover:bg-red-700 text-white\">\r\n                      <Icon name=\"mdi:delete\" /> Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Mobile cards -->\r\n          <div class=\"md:hidden space-y-3\">\r\n            <div v-for=\"address in filteredAddresses\" :key=\"address.uuid\" class=\"bg-white dark:bg-gray-800 ring-1 ring-gray-100 dark:ring-0 rounded-lg p-4 shadow-sm\">\r\n              <div class=\"flex justify-between items-start\">\r\n                <div>\r\n                  <div class=\"text-sm font-semibold text-gray-800 dark:text-gray-100\">{{ address.title }}</div>\r\n                  <div class=\"text-xs text-gray-500 mt-1\">{{ address.person_name }} • <span class=\"text-gray-400\">{{ address.person_mobile }}</span></div>\r\n                </div>\r\n                <div class=\"flex flex-col items-end gap-2\">\r\n                  <div :class=\"['inline-flex items-center px-2 py-1 rounded-full text-xs font-semibold', typeBadges[address.type?.toLowerCase()]?.color]\">\r\n                    {{ typeBadges[address.type?.toLowerCase()]?.label || address.type }}\r\n                  </div>\r\n                  <div class=\"flex gap-2\">\r\n                    <button @click=\"openModal('view', address)\" class=\"text-gray-600 hover:text-gray-800\"><Icon name=\"mdi:eye\" /></button>\r\n                    <button @click=\"openModal('edit', address)\" class=\"text-blue-600 hover:text-blue-800\"><Icon name=\"mdi:pencil\" /></button>\r\n                    <button @click=\"deleteAddress(address.uuid)\" class=\"text-red-600 hover:text-red-800\"><Icon name=\"mdi:delete\" /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"mt-3 text-sm text-gray-700 dark:text-gray-300\">\r\n                {{ address.address_1 }}, {{ address.city }}, {{ address.state?.name || address.state }}, {{ address.postal_code }}, India\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal -->\r\n    <transition name=\"fade\">\r\n      <div v-if=\"showModal\" class=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n        <div class=\"absolute inset-0 bg-black/40\" @click=\"showModal = false\"></div>\r\n\r\n        <div class=\"relative w-full max-w-3xl mx-4\">\r\n          <div class=\"bg-white dark:bg-gray-800 rounded-xl shadow-xl overflow-hidden ring-1 ring-gray-100 dark:ring-0\">\r\n            <div class=\"flex items-center justify-between p-5 border-b border-gray-100 dark:border-gray-700\">\r\n              <div>\r\n                <h3 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">\r\n                  {{ modalMode === 'create' ? 'Add New Address' : modalMode === 'edit' ? 'Edit Address' : 'View Address' }}\r\n                </h3>\r\n                <p class=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">Keep your addresses up-to-date for faster checkout.</p>\r\n              </div>\r\n              <div class=\"flex items-center gap-2\">\r\n                <button @click=\"showModal = false\" class=\"text-gray-500 hover:text-gray-700 dark:text-gray-300\" title=\"Close\">\r\n                  ✖\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"p-6\">\r\n              <!-- Form Mode -->\r\n              <form v-if=\"modalMode !== 'view'\" class=\"grid grid-cols-1 md:grid-cols-2 gap-4\" @submit.prevent=\"saveAddress\">\r\n                <!-- Left column -->\r\n                <div class=\"space-y-4\">\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                      Title\r\n                    </label>\r\n                    <input v-model=\"currentAddress.title\" @input=\"delete errors.title\" @blur=\"validateField('title')\" type=\"text\" placeholder=\"My Home / Office\" class=\"input mt-1\" />\r\n                    <span v-if=\"errors.title\" class=\"text-red-600 text-xs mt-1\">{{ errors.title }}</span>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                      Type <span class=\"text-rose-600\">*</span>\r\n                    </label>\r\n                    <select v-model=\"currentAddress.type\" @change=\"validateField('type')\" class=\"input mt-1\" required>\r\n                      <option value=\"\">Select type</option>\r\n                      <option v-for=\"(badge, key) in typeBadges\" :key=\"key\" :value=\"key\">{{ badge.label }}</option>\r\n                    </select>\r\n                    <span v-if=\"errors.type\" class=\"text-red-600 text-xs mt-1\">{{ errors.type }}</span>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Street Address <span class=\"text-rose-600\">*</span></label>\r\n                    <input v-model=\"currentAddress.address_1\" @input=\"delete errors.address_1\" @blur=\"validateField('address_1')\" type=\"text\" placeholder=\"House number, building, road\" class=\"input mt-1\" />\r\n                    <span v-if=\"errors.address_1\" class=\"text-red-600 text-xs mt-1\">{{ errors.address_1 }}</span>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Landmark <span class=\"text-rose-600\">*</span></label>\r\n                    <input v-model=\"currentAddress.landmark\" @input=\"delete errors.landmark\" @blur=\"validateField('landmark')\" type=\"text\" placeholder=\"e.g. near hospital\" class=\"input mt-1\" />\r\n                    <span v-if=\"errors.landmark\" class=\"text-red-600 text-xs mt-1\">{{ errors.landmark }}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Right column -->\r\n                <div class=\"space-y-4\">\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Contact Name <span class=\"text-rose-600\">*</span></label>\r\n                    <input v-model=\"currentAddress.person_name\" @input=\"delete errors.person_name\" @blur=\"validateField('person_name')\" type=\"text\" placeholder=\"Full name\" class=\"input mt-1\" />\r\n                    <span v-if=\"errors.person_name\" class=\"text-red-600 text-xs mt-1\">{{ errors.person_name }}</span>\r\n                  </div>\r\n\r\n                  <div class=\"grid grid-cols-2 gap-2\">\r\n                    <div>\r\n                      <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Email</label>\r\n                      <input v-model=\"currentAddress.person_email\" type=\"email\" class=\"input mt-1\" placeholder=\"you@example.com\" />\r\n                    </div>\r\n                    <div>\r\n                      <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Mobile <span class=\"text-rose-600\">*</span></label>\r\n                      <input v-model=\"currentAddress.person_mobile\" @input=\"delete errors.person_mobile\" @blur=\"validateField('person_mobile')\" type=\"text\" class=\"input mt-1\" placeholder=\"+91 99999 99999\" />\r\n                      <span v-if=\"errors.person_mobile\" class=\"text-red-600 text-xs mt-1\">{{ errors.person_mobile }}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">State <span class=\"text-rose-600\">*</span></label>\r\n                    <select v-model=\"currentAddress.state_code\" @change=\"() => { fetchBlocks(); validateField('state_code') }\" class=\"input mt-1\">\r\n                      <option disabled value=\"\">Select your state</option>\r\n                      <option v-for=\"state in stateList\" :key=\"state.code\" :value=\"state.code\">{{ state.name }}</option>\r\n                    </select>\r\n                    <span v-if=\"errors.state_code\" class=\"text-red-600 text-xs mt-1\">{{ errors.state_code }}</span>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">District / City <span class=\"text-rose-600\">*</span></label>\r\n                    <select v-model=\"currentAddress.city\" @change=\"validateField('city')\" class=\"input mt-1\">\r\n                      <option disabled value=\"\">Select district</option>\r\n                      <option v-for=\"district in districtList\" :key=\"district\" :value=\"district\">{{ district }}</option>\r\n                    </select>\r\n                    <span v-if=\"errors.city\" class=\"text-red-600 text-xs mt-1\">{{ errors.city }}</span>\r\n                  </div>\r\n\r\n                  <div class=\"grid grid-cols-2 gap-2\">\r\n                    <div>\r\n                      <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Pincode <span class=\"text-rose-600\">*</span></label>\r\n                      <div class=\"relative\">\r\n                        <input\r\n                            v-model=\"currentAddress.postal_code\"\r\n                            maxlength=\"6\"\r\n                            minlength=\"6\"\r\n                            @input=\"delete errors.postal_code\"\r\n                            @blur=\"validateField('postal_code')\"\r\n                            class=\"input mt-1 pr-10\"\r\n                            placeholder=\"6-digit pincode\"\r\n                        />\r\n                        <button @click.prevent=\"fetchAddressFromPostalCode\" class=\"absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 hover:text-blue-600\">🔍</button>\r\n                      </div>\r\n                      <span v-if=\"errors.postal_code\" class=\"text-red-600 text-xs mt-1\">{{ errors.postal_code }}</span>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Block <span class=\"text-rose-600\">*</span></label>\r\n\r\n                      <!-- blockList contains objects; option value uses primitive `url` string -->\r\n                      <template v-if=\"blockList && blockList.length\">\r\n                        <select v-model=\"currentAddress.block_id\" @change=\"validateField('block_id')\" class=\"input mt-1\">\r\n                          <option disabled value=\"\">Select block</option>\r\n                          <option v-for=\"b in blockList\" :key=\"b.url\" :value=\"b.url\">{{ b.name }}</option>\r\n                        </select>\r\n                      </template>\r\n\r\n                      <template v-else>\r\n                        <input v-model=\"currentAddress.block_id\" @input=\"delete errors.block_id\" @blur=\"validateField('block_id')\" type=\"text\" class=\"input mt-1\" placeholder=\"Enter block\" />\r\n                      </template>\r\n\r\n                      <span v-if=\"errors.block_id\" class=\"text-red-600 text-xs mt-1\">{{ errors.block_id }}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Country <span class=\"text-rose-600\">*</span></label>\r\n                    <input type=\"text\" value=\"India\" disabled class=\"input mt-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-200 cursor-not-allowed\" />\r\n                    <span v-if=\"errors.country\" class=\"text-red-600 text-xs mt-1\">{{ errors.country }}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Buttons spanning full width -->\r\n                <div class=\"md:col-span-2 flex justify-end gap-2 mt-2\">\r\n                  <button type=\"button\" @click=\"showModal = false\" class=\"px-4 py-2 rounded-md border hover:bg-gray-50 dark:hover:bg-gray-700\">Cancel</button>\r\n                  <button type=\"submit\" class=\"px-4 py-2 rounded-md bg-gradient-to-br from-blue-600 to-blue-500 text-white shadow\">\r\n                    <Icon name=\"mdi:content-save\" /> Save address\r\n                  </button>\r\n                </div>\r\n              </form>\r\n\r\n              <!-- View Mode -->\r\n              <div v-else class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <div class=\"text-sm text-gray-500\">Title</div>\r\n                  <div class=\"font-semibold text-gray-800 dark:text-gray-100\">{{ currentAddress.title }}</div>\r\n                </div>\r\n                <div>\r\n                  <div class=\"text-sm text-gray-500\">Type</div>\r\n                  <div class=\"font-semibold text-gray-800 dark:text-gray-100\">{{ typeBadges[currentAddress.type]?.label }}</div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div class=\"text-sm text-gray-500\">Contact</div>\r\n                  <div class=\"font-semibold text-gray-800 dark:text-gray-100\">{{ currentAddress.person_name }} • <span class=\"text-gray-500\">{{ currentAddress.person_mobile }}</span></div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div class=\"text-sm text-gray-500\">Email</div>\r\n                  <div class=\"font-semibold text-gray-800 dark:text-gray-100\">{{ currentAddress.person_email }}</div>\r\n                </div>\r\n\r\n                <div class=\"md:col-span-2\">\r\n                  <div class=\"text-sm text-gray-500\">Address</div>\r\n                  <div class=\"font-semibold text-gray-800 dark:text-gray-100\">\r\n                    {{ currentAddress.address_1 }}, {{ currentAddress.landmark ? currentAddress.landmark + ', ' : '' }}{{ currentAddress.city }}, {{ currentAddress.state_code }}, {{ currentAddress.postal_code }}, India\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"md:col-span-2 flex justify-end gap-2 mt-3\">\r\n                  <button type=\"button\" @click=\"showModal = false\" class=\"px-4 py-2 rounded-md border hover:bg-gray-50 dark:hover:bg-gray-700\">Close</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.input {\r\n  @apply w-full border rounded-md px-3 py-2 bg-white dark:bg-gray-900 border-gray-200 dark:border-gray-700 text-gray-800 dark:text-gray-200;\r\n}\r\n\r\n/* subtle fade for modal */\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity .2s;\r\n}\r\n.fade-enter-from, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>\r\n"],"names":["config","useRuntimeConfig","addresses","ref","isLoading","showModal","modalMode","searchPincode","stateList","blockList","districtList","currentAddress","reactive","errors","route","useRoute","requiredFields","validateField","field","raw","digits","validateAll","k","f","clearErrors","typeBadges","fetchStates","res","useSanctumFetch","fetchBlocks","blocks","b","name","url","fetchAddressFromPostalCode","code","data","po","getStateCodeByName","poBlockName","found","state","s","loadAddresses","filteredAddresses","computed","addr","_a","openModal","mode","address","_b","queryType","saveAddress","payload","deleteAddress","uuid","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_cache","_hoisted_5","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_8","$event","_createVNode","_component_Icon","_hoisted_9","_hoisted_10","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_Fragment","_renderList","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_normalizeClass","_d","_c","_hoisted_22","_e","_hoisted_23","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_37","_hoisted_11","_Transition","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_vModelText","_hoisted_46","badge","key","_hoisted_47","_vModelSelect","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","district","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75"],"mappings":"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"}