{"version":3,"file":"-BNih5ZN.js","sources":["../../../../pages/product/odl/[url].vue"],"sourcesContent":["<template>\r\n  <div class=\"w-full h-full\">\r\n    <!-- Place Cart Button -->\r\n    <div class=\"mt-14 mr-5\">\r\n      <CartCounter />\r\n    </div>\r\n\r\n    <h2 class=\"text-5xl text-red-500\"> Product View Page</h2>\r\n\r\n    <!-- Loader -->\r\n    <GlobalLoader v-if=\"isLoading\" />\r\n\r\n    <div v-else class=\"w-full h-full\">\r\n\r\n\r\n        <!-- Product View -->\r\n      <div v-if=\"product\" class=\"container mx-auto px-4 py-10 flex flex-col gap-3\">\r\n\r\n        <div class=\"flex flex-row gap-4\">\r\n          <div class=\"w-full md:w-1/3\">\r\n            <NuxtImg\r\n                loading=\"lazy\"\r\n                :src=\"product.banner\"\r\n                class=\"h-full md:h-[650px] w-full object-cover rounded mb-4\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"grow flex flex-col gap-4\">\r\n            <h1 class=\"text-2xl md:text-6xl font-roboto font-semibold\">{{product.name}}</h1>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n        <!-- Product View -->\r\n\r\n      <div v-else class=\"flex flex-col justify-center items-center \">\r\n        <h1 class=\"text-xl my-8 text-blue-500\">Fetching data...</h1>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport {ref, computed, watch, onMounted} from 'vue'\r\nimport {useRoute, useRuntimeConfig, useFetch, useToast, useSanctumFetch} from '#imports'\r\nimport { Swiper, SwiperSlide } from 'swiper/vue'\r\nimport 'swiper/css'\r\nimport AddToCartButton from \"~/components/cart/AddToCartButton.vue\";\r\nimport CartCounter from \"~/components/cart/CartCounter.vue\";\r\nimport GlobalLoader from \"~/components/GlobalLoader.vue\"\r\n\r\nconst route = useRoute()\r\nconst config = useRuntimeConfig()\r\nconst isLoading = useState('pageLoading', () => false)\r\nconst toast = useToast()\r\nconst product = ref(null)\r\n\r\n\r\n\r\n\r\n\r\nasync function fetchSuggestionProducts() {\r\n  try {\r\n    const res = await useSanctumFetch(`${config.public.apiBase}/products/${route.params.url}`, {\r\n      method: 'GET'\r\n    })\r\n    product.value = res?.data ?? []\r\n  } catch (error) {\r\n    console.error('[âœ˜] Failed to load suggestion products', error)\r\n  }\r\n}\r\n\r\n\r\n\r\nonMounted(async () => {\r\n\r\n  try {\r\n\r\n    await fetchSuggestionProducts()\r\n  } catch (e) {\r\n    console.error('Api fetch failed!', e)\r\n  } finally {\r\n    isLoading.value = false\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n//\r\n// const { data, pending, error } = await useFetch(`${config.public.apiBase}/products/${route.params.url}`)\r\n//\r\n// // watch(data, (val) => console.log('Fetched data:', val), { immediate: true })\r\n// // watch(product, (val) => console.log('Product ref:', val), { immediate: true })\r\n//\r\n// if (data.value && data.value.data) {\r\n//   product.value = data.value.data\r\n// }\r\n\r\n// Computed images array\r\n// const images = computed(() => {\r\n//   const p = product.value\r\n//   if (!p) return []\r\n//   console.log('Computed product.images from banner:', p.banner)\r\n//   const bannerArr = Array.isArray(p.banner) ? p.banner : p.banner ? [p.banner] : []\r\n//   const result = [p.thumbnail, ...bannerArr].filter(Boolean)\r\n//   console.log('Computed images:', result)\r\n//   return result\r\n// })\r\n\r\n//watch(images, (imgs) => console.log('Images array:', imgs), { immediate: true })\r\n\r\n\r\n// Handle user clicking on a variant option\r\n// function handleOptionClick(filterName, option) {\r\n//   console.log('Clicked:', filterName, option)\r\n//   // TODO: Add logic if needed to change variant or navigate\r\n// }\r\n//\r\n// // Check if current variant has this option active\r\n// function isActiveOption(filterName, option) {\r\n//   return product.value?.filter_option?.some(\r\n//       opt => opt.filter.name === filterName && opt.value === option\r\n//   )\r\n// }\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Add custom styles if needed */\r\n</style>\r\n"],"names":["route","useRoute","config","useRuntimeConfig","isLoading","useState","useToast","product","ref","fetchSuggestionProducts","res","useSanctumFetch","error","onMounted","e","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","CartCounter","_cache","_unref","_createBlock","GlobalLoader","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_component_NuxtImg","_hoisted_7","_hoisted_8","_toDisplayString","_hoisted_9"],"mappings":"suCA2DA,MAAMA,EAAQC,EAAQ,EAChBC,EAASC,EAAgB,EACzBC,EAAYC,EAAS,cAAe,IAAM,EAAK,EACvCC,EAAQ,EACtB,MAAMC,EAAUC,EAAI,IAAI,EAMxB,eAAeC,GAA0B,CACvC,GAAI,CACF,MAAMC,EAAM,MAAMC,EAAgB,GAAGT,EAAO,OAAO,OAAO,aAAaF,EAAM,OAAO,GAAG,GAAI,CACzF,OAAQ,KACd,CAAK,EACDO,EAAQ,OAAQG,GAAA,YAAAA,EAAK,OAAQ,CAAA,CAC/B,OAASE,EAAO,CACd,QAAQ,MAAM,yCAA0CA,CAAK,CAC/D,CACF,CAIA,OAAAC,EAAU,SAAY,CAEpB,GAAI,CAEF,MAAMJ,EAAuB,CAC/B,OAASK,EAAG,CACV,QAAQ,MAAM,oBAAqBA,CAAC,CACtC,QAAC,CACCV,EAAU,MAAQ,EACpB,CACF,CAAC,oBA3FC,OAAAW,EAAA,EAAAC,EA6CM,MA7CNC,EA6CM,CA3CJC,EAEM,MAFNC,EAEM,CADJC,EAAeC,CAAA,IAGjBC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAJ,EAAyD,KAAA,CAArD,MAAM,uBAAuB,EAAC,qBAAkB,EAAA,GAGhCK,EAAAnB,CAAA,OAApBoB,EAAiCC,EAAA,CAAA,IAAA,CAAA,CAAA,IAEjCV,IAAAC,EA8BM,MA9BNU,EA8BM,CA1BOnB,EAAA,OAAXQ,IAAAC,EAoBM,MApBNW,EAoBM,CAlBJT,EAcM,MAdNU,EAcM,CAbJV,EAMM,MANNW,EAMM,CALJT,EAIEU,EAAA,CAHE,QAAQ,OACP,IAAKvB,EAAA,MAAQ,OACd,MAAM,0EAIZW,EAEM,MAFNa,EAEM,CADJb,EAAgF,KAAhFc,EAAgFC,EAAnB1B,EAAA,MAAQ,IAAI,EAAA,CAAA,UAW/EQ,EAAA,EAAAC,EAEM,MAFNkB,EAEMZ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CADJJ,EAA4D,KAAA,CAAxD,MAAM,4BAA4B,EAAC,mBAAgB,EAAA"}