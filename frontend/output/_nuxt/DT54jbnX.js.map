{"version":3,"mappings":"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","names":["loggedInUser","copied","ref","copyAffiliateLink","currentView","chartRef","chartData","totalMembers","selectedMember","lastCenteredId","isDarkMode","tabClass","isActive","selectMember","member","centerNodeById","id","nextTick","chartInstance","initChart","OrgChart","__vitePreload","d","user","bg","text","subText","border","onMounted","watch","newVal","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_normalizeClass","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_Fragment","_renderList","$event","_hoisted_14","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_22","_hoisted_23","_hoisted_24","_cache","_hoisted_25"],"ignoreList":[],"sources":["../../../../pages/dashboard/myteam.vue"],"sourcesContent":["<template>\r\n  <div class=\"px-4 py-6 space-y-6\">\r\n    <!-- Welcome Card -->\r\n    <div class=\"bg-blue-50 dark:bg-blue-900 border border-blue-300 dark:border-blue-700 p-4 rounded shadow\">\r\n      <h3 class=\"text-lg font-semibold dark:text-white\">Welcome, {{ loggedInUser.name }}</h3>\r\n      <p class=\"text-sm text-gray-600 dark:text-gray-300\">\r\n        Your affiliate link:\r\n        <span\r\n            @click=\"copyAffiliateLink\"\r\n            class=\"text-blue-600 dark:text-blue-300 cursor-pointer underline ml-1\"\r\n        >\r\n          {{ loggedInUser.affiliateLink }}\r\n        </span>\r\n        <span v-if=\"copied\" class=\"ml-2 text-green-500\">Copied!</span>\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Header & Tabs -->\r\n    <div class=\"flex items-center justify-between border-b pb-2 dark:border-gray-600\">\r\n      <h2 class=\"text-xl font-semibold dark:text-white\">\r\n        Total Downline Members: {{ totalMembers }}\r\n      </h2>\r\n      <div class=\"flex space-x-2\">\r\n        <button\r\n            @click=\"currentView = 'chart'\"\r\n            :class=\"tabClass(currentView === 'chart')\"\r\n        >\r\n          Org Chart\r\n        </button>\r\n        <button\r\n            @click=\"currentView = 'list'\"\r\n            :class=\"tabClass(currentView === 'list')\"\r\n        >\r\n          List View\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Main Grid -->\r\n    <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n      <!-- Left Panel -->\r\n      <div class=\"md:col-span-2 space-y-4\">\r\n        <!-- Org Chart -->\r\n        <div\r\n            v-if=\"currentView === 'chart'\"\r\n            class=\"overflow-auto border bg-white dark:bg-gray-800 rounded shadow-md h-[600px]\"\r\n        >\r\n          <div ref=\"chartRef\" id=\"chart-container\" class=\"min-w-[800px]\"></div>\r\n        </div>\r\n\r\n        <!-- List View -->\r\n        <div\r\n            v-if=\"currentView === 'list'\"\r\n            class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\"\r\n        >\r\n          <div\r\n              v-for=\"member in chartData\"\r\n              :key=\"member.id\"\r\n              @click=\"selectMember(member)\"\r\n              class=\"cursor-pointer p-5 border rounded-lg hover:shadow-md transition-all bg-white dark:bg-gray-800 dark:text-white\"\r\n          >\r\n            <div class=\"flex items-center gap-4\">\r\n              <img :src=\"member.image\" class=\"w-14 h-14 rounded-full object-cover\" />\r\n              <div>\r\n                <div class=\"font-semibold text-lg\">{{ member.name }} {{ member.lastName }}</div>\r\n                <div class=\"text-sm text-gray-500 dark:text-gray-400\">{{ member.position }}</div>\r\n                <div class=\"text-xs text-gray-400\">{{ member.email }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Right Panel -->\r\n      <div class=\"border rounded shadow bg-white dark:bg-gray-900 dark:text-white p-4 min-h-[250px]\">\r\n        <template v-if=\"selectedMember\">\r\n          <div class=\"flex items-center gap-4 mb-4\">\r\n            <img :src=\"selectedMember.image\" class=\"w-16 h-16 rounded-full object-cover\" />\r\n            <div>\r\n              <h3 class=\"text-lg font-semibold\">\r\n                {{ selectedMember.name }} {{ selectedMember.lastName }}\r\n              </h3>\r\n              <p class=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                {{ selectedMember.position }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-sm space-y-1\">\r\n            <p><strong>Email:</strong> {{ selectedMember.email }}</p>\r\n            <p><strong>ID:</strong> {{ selectedMember.id }}</p>\r\n            <p><strong>Manager ID:</strong> {{ selectedMember.parentId || 'â€”' }}</p>\r\n          </div>\r\n        </template>\r\n        <template v-else>\r\n          <p class=\"text-gray-500 dark:text-gray-400\">Select a member to view details.</p>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, nextTick, watch } from 'vue'\r\ndefinePageMeta({\r\n  layout: 'dashboard'\r\n})\r\n// Sample user\r\nconst loggedInUser = {\r\n  name: 'John Doe',\r\n  affiliateLink: 'https://yourapp.com/ref/johndoe'\r\n}\r\n\r\nconst copied = ref(false)\r\nconst copyAffiliateLink = () => {\r\n  navigator.clipboard.writeText(loggedInUser.affiliateLink)\r\n  copied.value = true\r\n  setTimeout(() => (copied.value = false), 2000)\r\n}\r\n\r\n// State\r\nconst currentView = ref('chart')\r\nconst chartRef = ref(null)\r\nconst chartData = ref([])\r\nconst totalMembers = ref(0)\r\nconst selectedMember = ref(null)\r\nconst lastCenteredId = ref(null)\r\nconst isDarkMode = ref(false)\r\n\r\nconst tabClass = (isActive) =>\r\n    `px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n        isActive\r\n            ? 'bg-blue-600 text-white'\r\n            : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n    }`\r\n\r\nconst selectMember = (member) => {\r\n  selectedMember.value = member\r\n  lastCenteredId.value = member.id\r\n  if (currentView.value === 'chart') {\r\n    centerNodeById(member.id)\r\n  }\r\n}\r\n\r\nconst centerNodeById = async (id) => {\r\n  await nextTick()\r\n  if (chartInstance?.setCentered) {\r\n    chartInstance.setCentered(id).render()\r\n  }\r\n}\r\n\r\nlet chartInstance = null\r\n\r\nconst initChart = async () => {\r\n  if (!chartRef.value) return\r\n  const { OrgChart } = await import('d3-org-chart')\r\n\r\n  isDarkMode.value = document.documentElement.classList.contains('dark')\r\n\r\n  chartInstance = new OrgChart()\r\n      .container(chartRef.value)\r\n      .data(chartData.value)\r\n      .nodeHeight(() => 120)\r\n      .nodeWidth(() => 240)\r\n      .childrenMargin(() => 50)\r\n      .compactMarginBetween(() => 35)\r\n      .compactMarginPair(() => 30)\r\n      .neighbourMargin(() => 20)\r\n      .nodeContent((d) => {\r\n        const user = d.data\r\n        const bg = isDarkMode.value ? '#1F2937' : '#ffffff'\r\n        const text = isDarkMode.value ? '#F9FAFB' : '#111827'\r\n        const subText = isDarkMode.value ? '#9CA3AF' : '#6B7280'\r\n        const border = isDarkMode.value ? '#374151' : '#D1D5DB'\r\n\r\n        return `\r\n        <div style=\"width:${d.width}px;height:${d.height}px;padding:10px;font-family:sans-serif;\r\n                    border-radius:8px;border:1px solid ${border};background:${bg};color:${text}\">\r\n          <div style=\"display:flex;align-items:center;\">\r\n            <img src=\"${user.image}\" style=\"border-radius:50%;width:50px;height:50px;margin-right:10px;\" />\r\n            <div>\r\n              <div style=\"font-weight:bold;font-size:16px;\">${user.name} ${user.lastName}</div>\r\n              <div style=\"color:${subText};font-size:13px;\">${user.position}</div>\r\n              <div style=\"color:${subText};font-size:12px;\">${user.email}</div>\r\n            </div>\r\n          </div>\r\n        </div>`\r\n      })\r\n      .onNodeClick((d) => {\r\n        selectMember(d.data)\r\n      })\r\n\r\n  await nextTick()\r\n  chartInstance.render()\r\n\r\n  if (lastCenteredId.value) {\r\n    chartInstance.setCentered(lastCenteredId.value).render()\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  chartData.value = [\r\n    {\r\n      id: 100,\r\n      parentId: null,\r\n      name: 'Steven',\r\n      lastName: 'King',\r\n      position: 'Chief Operating Officer',\r\n      image: 'https://bumbeishvili.github.io/avatars/avatars/portrait12.png',\r\n      email: 'SKING',\r\n    },\r\n    {\r\n      id: 101,\r\n      parentId: 100,\r\n      name: 'Neena',\r\n      lastName: 'Kochhar',\r\n      position: 'Administration VP',\r\n      image: 'https://bumbeishvili.github.io/avatars/avatars/portrait85.png',\r\n      email: 'NKOCHHAR',\r\n    },\r\n    {\r\n      id: 102,\r\n      parentId: 100,\r\n      name: 'Lex',\r\n      lastName: 'De Haan',\r\n      position: 'Finance Manager',\r\n      image: 'https://bumbeishvili.github.io/avatars/avatars/portrait7.png',\r\n      email: 'LDEHAAN',\r\n    }\r\n  ]\r\n\r\n  totalMembers.value = chartData.value.length\r\n  selectedMember.value = chartData.value[0]\r\n  lastCenteredId.value = selectedMember.value.id\r\n\r\n  await nextTick()\r\n  initChart()\r\n})\r\n\r\n// Re-render chart when returning to chart view\r\nwatch(currentView, async (newVal) => {\r\n  if (newVal === 'chart') {\r\n    await nextTick()\r\n    isDarkMode.value = document.documentElement.classList.contains('dark')\r\n    if (chartInstance) {\r\n      chartInstance.container(chartRef.value)\r\n      if (lastCenteredId.value) {\r\n        chartInstance.setCentered(lastCenteredId.value)\r\n      }\r\n      chartInstance.render()\r\n    } else {\r\n      initChart()\r\n    }\r\n  }\r\n})\r\n</script>\r\n"],"file":"_nuxt/DT54jbnX.js"}