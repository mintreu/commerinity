{"version":3,"file":"nfvvACxY.js","sources":["../../../../composables/useCart.ts"],"sourcesContent":["// composables/useCart.ts\r\nimport { useSanctum, useSanctumFetch, useRuntimeConfig, useCookie } from '#imports'\r\n\r\ninterface CartItem {\r\n    product_id: number\r\n    product: {\r\n        sku: string\r\n        name: string\r\n        price: string\r\n        thumbnail: string\r\n        min_quantity: number\r\n        max_quantity: number\r\n    }\r\n    quantity: number\r\n    total: string\r\n}\r\n\r\ninterface CartSummary {\r\n    sub_total: string\r\n    tax: string\r\n    discount: string\r\n    total: string\r\n    quantity: number\r\n    coupon_applied: boolean\r\n}\r\n\r\ninterface CartResponse {\r\n    items: CartItem[]\r\n    summary: CartSummary\r\n    customer: any\r\n}\r\n\r\nexport const useCart = () => {\r\n    const { isLoggedIn } = useSanctum()\r\n    const config = useRuntimeConfig()\r\n\r\n    // ✅ shared global state\r\n    const cartData = useState<CartResponse>('cartData', () => ({\r\n        items: [],\r\n        summary: {\r\n            sub_total: '₹0.00',\r\n            tax: '₹0.00',\r\n            discount: '₹0.00',\r\n            total: '₹0.00',\r\n            quantity: 0,\r\n            coupon_applied: false\r\n        },\r\n        customer: {}\r\n    }))\r\n\r\n    const loading = useState<boolean>('cartLoading', () => false)\r\n\r\n    // guest credentials\r\n    const guestId = useCookie('guest_id')\r\n    const guestToken = useCookie('guest_token')\r\n    const guestTokenExpires = useCookie('guest_token_expires')\r\n\r\n    // ✅ always returns proper HeadersInit\r\n    const getGuestHeaders = (): HeadersInit => {\r\n        if (!isLoggedIn.value && guestId.value && guestToken.value) {\r\n            return {\r\n                'x-guest-id': guestId.value as string,\r\n                'x-guest-token': guestToken.value as string\r\n            }\r\n        }\r\n        return {}\r\n    }\r\n\r\n    async function validateOrInitGuest() {\r\n        const expired =\r\n            guestTokenExpires.value &&\r\n            Date.now() > new Date(guestTokenExpires.value).getTime()\r\n        const missing = !guestId.value || !guestToken.value\r\n\r\n        if (isLoggedIn.value) return\r\n\r\n        if (expired || missing) {\r\n            try {\r\n                const res = await useSanctumFetch(\r\n                    `${config.public.apiBase}/cart/guest-credential`,\r\n                    { method: 'POST' }\r\n                )\r\n                const data = res?.data || {}\r\n                guestId.value = data.guest_id\r\n                guestToken.value = data.guest_token\r\n                guestTokenExpires.value = data.expires_at\r\n            } catch (e) {\r\n                console.error('[Cart] Failed to init guest credentials', e)\r\n            }\r\n        }\r\n    }\r\n\r\n    async function fetchCart() {\r\n        if (loading.value) return\r\n        loading.value = true\r\n        try {\r\n            await validateOrInitGuest()\r\n            const res = await useSanctumFetch(`${config.public.apiBase}/cart`, {\r\n                method: 'GET',\r\n                headers: getGuestHeaders()\r\n            })\r\n            cartData.value = res?.data || cartData.value\r\n        } catch (e) {\r\n            console.error('[Cart] Fetch error', e)\r\n        } finally {\r\n            loading.value = false\r\n        }\r\n    }\r\n\r\n    async function addToCart(sku: string, quantity = 1) {\r\n        try {\r\n            const res = await useSanctumFetch(\r\n                `${config.public.apiBase}/cart/add/${sku}`,\r\n                {\r\n                    method: 'POST',\r\n                    headers: getGuestHeaders(),\r\n                    body: { quantity }\r\n                }\r\n            )\r\n            cartData.value = res?.data || cartData.value\r\n        } catch (e) {\r\n            console.error('[Cart] Add error', e)\r\n        }\r\n    }\r\n\r\n    async function updateCartItem(sku: string, quantity: number) {\r\n        try {\r\n            const res = await useSanctumFetch(\r\n                `${config.public.apiBase}/cart/update/${sku}`,\r\n                {\r\n                    method: 'POST',\r\n                    headers: getGuestHeaders(),\r\n                    body: { quantity }\r\n                }\r\n            )\r\n            cartData.value = res?.data || cartData.value\r\n        } catch (e) {\r\n            console.error('[Cart] Update error', e)\r\n        }\r\n    }\r\n\r\n    async function removeItem(sku: string) {\r\n        try {\r\n            const res = await useSanctumFetch(\r\n                `${config.public.apiBase}/cart/remove/${sku}`,\r\n                {\r\n                    method: 'DELETE',\r\n                    headers: getGuestHeaders()\r\n                }\r\n            )\r\n            cartData.value = res?.data || cartData.value\r\n        } catch (e) {\r\n            console.error('[Cart] Remove error', e)\r\n        }\r\n    }\r\n\r\n    async function applyCoupon(code: string) {\r\n        try {\r\n            const res = await useSanctumFetch(\r\n                `${config.public.apiBase}/cart/coupon/${code}`,\r\n                {\r\n                    method: 'POST',\r\n                    headers: getGuestHeaders()\r\n                }\r\n            )\r\n            cartData.value = res?.data || cartData.value\r\n        } catch (e) {\r\n            console.error('[Cart] Coupon error', e)\r\n        }\r\n    }\r\n\r\n    // handy computed\r\n    const itemCount = computed(() => cartData.value.summary?.quantity || 0)\r\n    const items = computed(() => cartData.value.items || [])\r\n\r\n    return {\r\n        cartData,\r\n        itemCount,\r\n        items,\r\n        fetchCart,\r\n        addToCart,\r\n        updateCartItem,\r\n        removeItem,\r\n        applyCoupon,\r\n        loading\r\n    }\r\n}\r\n"],"names":["useCart","isLoggedIn","useSanctum","config","useRuntimeConfig","cartData","useState","loading","guestId","useCookie","guestToken","guestTokenExpires","getGuestHeaders","validateOrInitGuest","expired","missing","res","useSanctumFetch","data","e","fetchCart","addToCart","sku","quantity","updateCartItem","removeItem","applyCoupon","code","itemCount","computed","_a","items"],"mappings":"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"}